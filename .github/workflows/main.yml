name: Edulink Full System CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

  # schedule:
  #   - cron: '0 2 * * 0' # Weekly deployment check at 2 AM on Sundays

  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          cd Edulink
          pip install -r requirements.txt
          
      - name: Run tests
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          cd Edulink
          python manage.py test --settings=Edulink.settings.test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Django Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Edulink/
          file: ./Edulink/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/edulink-backend:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/edulink-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Edulink_website/
          file: ./Edulink_website/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/edulink-frontend:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/edulink-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to production server
        run: |
          ssh ${{ secrets.SERVER_BOT }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ~/edulink-deployment
            
            # Pull latest images
            docker pull ${{ secrets.DOCKER_USERNAME }}/edulink-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/edulink-frontend:latest
            
            # Update docker-compose with new images
            export BACKEND_IMAGE=${{ secrets.DOCKER_USERNAME }}/edulink-backend:latest
            export FRONTEND_IMAGE=${{ secrets.DOCKER_USERNAME }}/edulink-frontend:latest
            
            # Set Django settings for production
            export DJANGO_SETTINGS_MODULE=Edulink.settings.prod
            
            # Deploy with zero-downtime
            docker-compose -f docker-compose.prod.yml up -d --no-deps backend
            docker-compose -f docker-compose.prod.yml up -d --no-deps frontend
            docker-compose -f docker-compose.prod.yml up -d --no-deps nginx
            
            # Clean up old images
            docker image prune -f
          EOF

      # Health Check removed - subdomain configuration may not support expected URL structure
      # Manual verification can be done post-deployment if needed
