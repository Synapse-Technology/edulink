# Generated by Django 4.2.23 on 2025-08-26 18:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("companies", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="EmployerProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user_id",
                    models.UUIDField(
                        db_index=True,
                        help_text="Reference to user in auth service",
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        default="profile_pics/default.jpg",
                        null=True,
                        upload_to="profile_pics/",
                    ),
                ),
                ("phone_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
                (
                    "profile_completion_score",
                    models.PositiveIntegerField(
                        default=0, help_text="Profile completion percentage"
                    ),
                ),
                ("last_completion_update", models.DateTimeField(auto_now=True)),
                ("position", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "employee_id",
                    models.CharField(
                        blank=True,
                        help_text="Company-specific employee ID",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("hire_date", models.DateField(blank=True, null=True)),
                ("can_post_internships", models.BooleanField(default=False)),
                ("can_manage_applications", models.BooleanField(default=False)),
                ("can_manage_company_settings", models.BooleanField(default=False)),
                ("can_manage_departments", models.BooleanField(default=False)),
                ("can_view_analytics", models.BooleanField(default=False)),
                (
                    "employment_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("terminated", "Terminated"),
                            ("on_leave", "On Leave"),
                        ],
                        db_index=True,
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_verified", models.BooleanField(db_index=True, default=False)),
                ("verification_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Employer Profile",
                "verbose_name_plural": "Employer Profiles",
            },
        ),
        migrations.CreateModel(
            name="InstitutionProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user_id",
                    models.UUIDField(
                        db_index=True,
                        help_text="Reference to user in auth service",
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        default="profile_pics/default.jpg",
                        null=True,
                        upload_to="profile_pics/",
                    ),
                ),
                ("phone_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
                (
                    "profile_completion_score",
                    models.PositiveIntegerField(
                        default=0, help_text="Profile completion percentage"
                    ),
                ),
                ("last_completion_update", models.DateTimeField(auto_now=True)),
                (
                    "institution_id",
                    models.UUIDField(
                        db_index=True, help_text="Reference to institution", unique=True
                    ),
                ),
                ("position", models.CharField(blank=True, max_length=100, null=True)),
                ("department", models.CharField(blank=True, max_length=100, null=True)),
                ("can_verify_students", models.BooleanField(default=False)),
                ("can_manage_courses", models.BooleanField(default=False)),
                ("can_manage_departments", models.BooleanField(default=False)),
                ("can_view_analytics", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Institution Profile",
                "verbose_name_plural": "Institution Profiles",
            },
        ),
        migrations.CreateModel(
            name="ProfileInvitation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("email", models.EmailField(max_length=254)),
                (
                    "profile_type",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("employer", "Employer"),
                            ("institution", "Institution"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "invited_by_user_id",
                    models.UUIDField(help_text="User ID who sent the invitation"),
                ),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("is_used", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField()),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                ("institution_id", models.UUIDField(blank=True, null=True)),
                ("employer_id", models.UUIDField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "verbose_name": "Profile Invitation",
                "verbose_name_plural": "Profile Invitations",
            },
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user_id",
                    models.UUIDField(
                        db_index=True,
                        help_text="Reference to user in auth service",
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        default="profile_pics/default.jpg",
                        null=True,
                        upload_to="profile_pics/",
                    ),
                ),
                ("phone_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
                (
                    "profile_completion_score",
                    models.PositiveIntegerField(
                        default=0, help_text="Profile completion percentage"
                    ),
                ),
                ("last_completion_update", models.DateTimeField(auto_now=True)),
                (
                    "institution_id",
                    models.UUIDField(
                        blank=True,
                        db_index=True,
                        help_text="Reference to institution",
                        null=True,
                    ),
                ),
                (
                    "institution_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "registration_number",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Registration number must contain only uppercase letters, numbers, hyphens, and slashes.",
                                regex="^[A-Z0-9-/]+$",
                            )
                        ],
                    ),
                ),
                (
                    "year_of_study",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            (1, "First Year"),
                            (2, "Second Year"),
                            (3, "Third Year"),
                            (4, "Fourth Year"),
                            (5, "Fifth Year"),
                            (6, "Sixth Year"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "course_id",
                    models.UUIDField(
                        blank=True, help_text="Reference to course", null=True
                    ),
                ),
                (
                    "course_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "department_id",
                    models.UUIDField(
                        blank=True, help_text="Reference to department", null=True
                    ),
                ),
                (
                    "department_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "campus_id",
                    models.UUIDField(
                        blank=True, help_text="Reference to campus", null=True
                    ),
                ),
                (
                    "campus_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_verified", models.BooleanField(db_index=True, default=False)),
                (
                    "university_verified",
                    models.BooleanField(db_index=True, default=False),
                ),
                ("national_id_verified", models.BooleanField(default=False)),
                ("last_university_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "university_code_used",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "registration_method",
                    models.CharField(
                        choices=[
                            ("university_code", "University Code"),
                            ("university_search", "University Search"),
                        ],
                        default="university_search",
                        max_length=20,
                    ),
                ),
                ("academic_year", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "national_id",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="National ID must contain only numbers and uppercase letters.",
                                regex="^[0-9A-Z]+$",
                            )
                        ],
                    ),
                ),
                ("address", models.TextField(blank=True, null=True)),
                ("bio", models.TextField(blank=True, max_length=500, null=True)),
                ("skills", models.JSONField(blank=True, default=list)),
                ("interests", models.JSONField(blank=True, default=list)),
                (
                    "internship_status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("searching", "Actively Searching"),
                            ("applied", "Applications Submitted"),
                            ("interviewing", "In Interview Process"),
                            ("offer_received", "Offer Received"),
                            ("internship_active", "Currently Interning"),
                            ("internship_completed", "Internship Completed"),
                            ("on_hold", "Search On Hold"),
                        ],
                        db_index=True,
                        default="not_started",
                        max_length=20,
                    ),
                ),
                (
                    "github_url",
                    models.URLField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "twitter_url",
                    models.URLField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "portfolio_url",
                    models.URLField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "resume",
                    models.FileField(blank=True, null=True, upload_to="resumes/"),
                ),
            ],
            options={
                "verbose_name": "Student Profile",
                "verbose_name_plural": "Student Profiles",
                "indexes": [
                    models.Index(
                        fields=["institution_id", "course_id"],
                        name="profiles_st_institu_f6b3a1_idx",
                    ),
                    models.Index(
                        fields=["internship_status", "year_of_study"],
                        name="profiles_st_interns_b7bbb1_idx",
                    ),
                    models.Index(
                        fields=["university_verified", "created_at"],
                        name="profiles_st_univers_46f4f2_idx",
                    ),
                    models.Index(
                        fields=["registration_number"],
                        name="profiles_st_registr_e8411d_idx",
                    ),
                    models.Index(
                        fields=["is_verified", "is_active"],
                        name="profiles_st_is_veri_94b323_idx",
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="studentprofile",
            constraint=models.UniqueConstraint(
                condition=models.Q(("registration_number__isnull", False)),
                fields=("institution_id", "registration_number"),
                name="unique_registration_per_institution",
            ),
        ),
        migrations.AddIndex(
            model_name="profileinvitation",
            index=models.Index(
                fields=["email", "profile_type"], name="profiles_pr_email_6f75fe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="profileinvitation",
            index=models.Index(fields=["token"], name="profiles_pr_token_8747e9_idx"),
        ),
        migrations.AddIndex(
            model_name="profileinvitation",
            index=models.Index(
                fields=["expires_at", "is_used"], name="profiles_pr_expires_7970d7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="institutionprofile",
            index=models.Index(
                fields=["institution_id", "position"],
                name="profiles_in_institu_a5bab6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="institutionprofile",
            index=models.Index(
                fields=["can_verify_students"], name="profiles_in_can_ver_8e4198_idx"
            ),
        ),
        migrations.AddField(
            model_name="employerprofile",
            name="company",
            field=models.ForeignKey(
                help_text="Reference to the company this employer belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="employees",
                to="companies.company",
            ),
        ),
        migrations.AddField(
            model_name="employerprofile",
            name="department",
            field=models.ForeignKey(
                blank=True,
                help_text="Reference to the department within the company",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="employees",
                to="companies.department",
            ),
        ),
        migrations.AddField(
            model_name="employerprofile",
            name="manager",
            field=models.ForeignKey(
                blank=True,
                help_text="Direct manager of this employee",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="direct_reports",
                to="profiles.employerprofile",
            ),
        ),
        migrations.AddField(
            model_name="employerprofile",
            name="verified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The employer who verified this profile",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="verified_employees",
                to="profiles.employerprofile",
            ),
        ),
        migrations.AddIndex(
            model_name="employerprofile",
            index=models.Index(
                fields=["company", "department"], name="profiles_em_company_b2cdc8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employerprofile",
            index=models.Index(
                fields=["company", "employment_status"],
                name="profiles_em_company_73c47e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="employerprofile",
            index=models.Index(
                fields=["is_verified", "created_at"],
                name="profiles_em_is_veri_d8bd83_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="employerprofile",
            index=models.Index(
                fields=["manager", "department"], name="profiles_em_manager_88ee0e_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="employerprofile",
            constraint=models.UniqueConstraint(
                condition=models.Q(("employee_id__isnull", False)),
                fields=("company", "employee_id"),
                name="unique_employee_id_per_company",
            ),
        ),
    ]
