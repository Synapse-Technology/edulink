# Generated by Django 4.2.23 on 2025-08-26 18:26

import companies.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "name",
                    models.CharField(help_text="Official company name", max_length=255),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Company description and overview"
                    ),
                ),
                (
                    "industry",
                    models.CharField(
                        blank=True, help_text="Industry sector", max_length=100
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, help_text="Company website URL"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Primary company email",
                        max_length=254,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Primary company phone number",
                        max_length=20,
                        validators=[companies.models.validate_phone_number],
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Company headquarters location",
                        max_length=255,
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, help_text="Full company address"),
                ),
                (
                    "city",
                    models.CharField(blank=True, help_text="City", max_length=100),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, help_text="State/Province", max_length=100
                    ),
                ),
                (
                    "country",
                    models.CharField(blank=True, help_text="Country", max_length=100),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, help_text="Postal/ZIP code", max_length=20
                    ),
                ),
                (
                    "company_size",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1-10", "1-10 employees"),
                            ("11-50", "11-50 employees"),
                            ("51-200", "51-200 employees"),
                            ("201-500", "201-500 employees"),
                            ("501-1000", "501-1000 employees"),
                            ("1000+", "1000+ employees"),
                        ],
                        help_text="Number of employees",
                        max_length=20,
                        validators=[companies.models.validate_company_size],
                    ),
                ),
                (
                    "founded_year",
                    models.PositiveIntegerField(
                        blank=True, help_text="Year the company was founded", null=True
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        blank=True,
                        help_text="Official company registration number",
                        max_length=100,
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(
                        blank=True,
                        help_text="Tax identification number",
                        max_length=100,
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False, help_text="Whether the company has been verified"
                    ),
                ),
                (
                    "verification_documents",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of verification document URLs",
                    ),
                ),
                (
                    "verification_date",
                    models.DateTimeField(
                        blank=True, help_text="When the company was verified", null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("pending", "Pending Verification"),
                            ("suspended", "Suspended"),
                            ("archived", "Archived"),
                        ],
                        default="pending",
                        help_text="Current company status",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Whether the company is active",
                    ),
                ),
            ],
            options={
                "verbose_name": "Company",
                "verbose_name_plural": "Companies",
                "db_table": "companies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Supervisor",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "supervision_type",
                    models.CharField(
                        choices=[
                            ("direct", "Direct Supervisor"),
                            ("functional", "Functional Supervisor"),
                            ("project", "Project Supervisor"),
                            ("mentor", "Mentor"),
                        ],
                        default="direct",
                        help_text="Type of supervision relationship",
                        max_length=20,
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="When the supervision relationship started"
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="When the supervision relationship ended",
                        null=True,
                    ),
                ),
                (
                    "can_approve_leave",
                    models.BooleanField(
                        default=True, help_text="Can approve leave requests"
                    ),
                ),
                (
                    "can_conduct_reviews",
                    models.BooleanField(
                        default=True, help_text="Can conduct performance reviews"
                    ),
                ),
                (
                    "can_approve_expenses",
                    models.BooleanField(
                        default=False, help_text="Can approve expense reports"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes about the supervision relationship",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this supervision relationship is currently active",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supervisor",
                "verbose_name_plural": "Supervisors",
                "db_table": "supervisors",
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Department name", max_length=255)),
                (
                    "description",
                    models.TextField(blank=True, help_text="Department description"),
                ),
                (
                    "budget",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Department budget",
                        max_digits=15,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the department is currently active",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="departments",
                        to="companies.company",
                    ),
                ),
                (
                    "parent_department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_departments",
                        to="companies.department",
                    ),
                ),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
                "db_table": "departments",
                "ordering": ["company__name", "name"],
            },
        ),
        migrations.CreateModel(
            name="CompanySettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "company_logo",
                    models.ImageField(
                        blank=True,
                        help_text="Company logo image",
                        null=True,
                        upload_to="company_logos/",
                    ),
                ),
                (
                    "logo_alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Alt text for company logo",
                        max_length=255,
                    ),
                ),
                (
                    "default_visibility",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("private", "Private"),
                            ("unlisted", "Unlisted"),
                        ],
                        default="public",
                        help_text="Default visibility for company postings",
                        max_length=20,
                    ),
                ),
                (
                    "default_require_cover_letter",
                    models.BooleanField(
                        default=False,
                        help_text="Default setting for requiring cover letters",
                    ),
                ),
                (
                    "allow_remote_work",
                    models.BooleanField(
                        default=True, help_text="Whether the company allows remote work"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC",
                        help_text="Company default timezone",
                        max_length=50,
                    ),
                ),
                (
                    "business_hours_start",
                    models.TimeField(
                        blank=True,
                        help_text="Standard business hours start time",
                        null=True,
                    ),
                ),
                (
                    "business_hours_end",
                    models.TimeField(
                        blank=True,
                        help_text="Standard business hours end time",
                        null=True,
                    ),
                ),
                (
                    "notification_preferences",
                    models.JSONField(
                        default=dict, help_text="Company-wide notification preferences"
                    ),
                ),
                (
                    "company",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to="companies.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Company Settings",
                "verbose_name_plural": "Company Settings",
                "db_table": "company_settings",
            },
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(fields=["name"], name="companies_name_idx"),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(fields=["industry"], name="companies_industry_idx"),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(fields=["is_verified"], name="companies_verified_idx"),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(fields=["status"], name="companies_status_idx"),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(fields=["is_active"], name="companies_active_idx"),
        ),
        migrations.AddIndex(
            model_name="department",
            index=models.Index(
                fields=["company", "name"], name="departments_company_name_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="department",
            index=models.Index(fields=["is_active"], name="departments_active_idx"),
        ),
        migrations.AddIndex(
            model_name="department",
            index=models.Index(
                fields=["parent_department"], name="departments_parent_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="department",
            constraint=models.UniqueConstraint(
                fields=("company", "name"), name="unique_department_per_company"
            ),
        ),
    ]
