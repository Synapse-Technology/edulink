# Generated by Django 4.2.23 on 2025-08-26 18:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Institution",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("short_name", models.CharField(blank=True, max_length=50)),
                ("description", models.TextField(blank=True)),
                (
                    "institution_type",
                    models.CharField(
                        choices=[
                            ("university", "University"),
                            ("college", "College"),
                            ("technical_institute", "Technical Institute"),
                            ("vocational_school", "Vocational School"),
                            ("community_college", "Community College"),
                            ("research_institute", "Research Institute"),
                            ("other", "Other"),
                        ],
                        default="university",
                        max_length=50,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("website", models.URLField(blank=True)),
                ("address_line_1", models.CharField(max_length=255)),
                ("address_line_2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("state_province", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=100)),
                ("registration_number", models.CharField(max_length=100, unique=True)),
                ("tax_id", models.CharField(blank=True, max_length=50)),
                ("accreditation_number", models.CharField(blank=True, max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("pending", "Pending Approval"),
                            ("suspended", "Suspended"),
                            ("archived", "Archived"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="institutions/logos/"
                    ),
                ),
                (
                    "banner_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="institutions/banners/"
                    ),
                ),
                (
                    "established_year",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("student_count", models.PositiveIntegerField(default=0)),
                ("faculty_count", models.PositiveIntegerField(default=0)),
                ("settings", models.JSONField(blank=True, default=dict)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "institutions",
            },
        ),
        migrations.CreateModel(
            name="InstitutionDepartment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True)),
                ("head_name", models.CharField(blank=True, max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("is_active", models.BooleanField(default=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="departments",
                        to="institutions.institution",
                    ),
                ),
            ],
            options={
                "db_table": "institution_departments",
            },
        ),
        migrations.CreateModel(
            name="UniversityRegistrationCode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("code", models.CharField(db_index=True, max_length=20, unique=True)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("valid_from", models.DateTimeField(default=django.utils.timezone.now)),
                ("valid_until", models.DateTimeField(blank=True, null=True)),
                (
                    "max_uses",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of times this code can be used",
                        null=True,
                    ),
                ),
                ("current_uses", models.PositiveIntegerField(default=0)),
                (
                    "allowed_years",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of allowed years of study (e.g., [1, 2, 3, 4])",
                    ),
                ),
                (
                    "allowed_courses",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of allowed course codes",
                    ),
                ),
                (
                    "created_by",
                    models.UUIDField(
                        blank=True, help_text="User ID who created this code", null=True
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registration_codes",
                        to="institutions.institution",
                    ),
                ),
            ],
            options={
                "db_table": "university_registration_codes",
            },
        ),
        migrations.CreateModel(
            name="InstitutionSettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "academic_year_start_month",
                    models.PositiveIntegerField(
                        default=9, help_text="Month when academic year starts (1-12)"
                    ),
                ),
                (
                    "grading_system",
                    models.CharField(
                        choices=[
                            ("gpa_4", "GPA 4.0 Scale"),
                            ("gpa_5", "GPA 5.0 Scale"),
                            ("percentage", "Percentage"),
                            ("letter", "Letter Grades"),
                            ("other", "Other"),
                        ],
                        default="gpa_4",
                        max_length=50,
                    ),
                ),
                ("allow_internships", models.BooleanField(default=True)),
                ("require_internship_approval", models.BooleanField(default=True)),
                (
                    "min_internship_duration_weeks",
                    models.PositiveIntegerField(default=8),
                ),
                (
                    "max_internship_duration_weeks",
                    models.PositiveIntegerField(default=52),
                ),
                ("require_profile_verification", models.BooleanField(default=True)),
                ("allow_public_profiles", models.BooleanField(default=True)),
                ("notification_settings", models.JSONField(blank=True, default=dict)),
                ("integration_settings", models.JSONField(blank=True, default=dict)),
                ("custom_settings", models.JSONField(blank=True, default=dict)),
                (
                    "institution",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="institution_settings",
                        to="institutions.institution",
                    ),
                ),
            ],
            options={
                "db_table": "institution_settings",
            },
        ),
        migrations.CreateModel(
            name="InstitutionProgram",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True)),
                (
                    "degree_type",
                    models.CharField(
                        choices=[
                            ("certificate", "Certificate"),
                            ("diploma", "Diploma"),
                            ("associate", "Associate Degree"),
                            ("bachelor", "Bachelor Degree"),
                            ("master", "Master Degree"),
                            ("doctorate", "Doctorate"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "duration_months",
                    models.PositiveIntegerField(help_text="Program duration in months"),
                ),
                (
                    "credits_required",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programs",
                        to="institutions.institutiondepartment",
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programs",
                        to="institutions.institution",
                    ),
                ),
            ],
            options={
                "db_table": "institution_programs",
            },
        ),
        migrations.CreateModel(
            name="InstitutionMembership",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user_profile_id",
                    models.UUIDField(
                        db_index=True,
                        help_text="Reference to UserProfile in user service",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("faculty", "Faculty"),
                            ("admin", "Administrator"),
                            ("staff", "Staff"),
                        ],
                        help_text="User's role within the institution",
                        max_length=30,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("pending", "Pending"),
                            ("suspended", "Suspended"),
                        ],
                        default="pending",
                        help_text="Membership status",
                        max_length=20,
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("left_at", models.DateTimeField(blank=True, null=True)),
                (
                    "student_id",
                    models.CharField(
                        blank=True,
                        help_text="Institution-specific student/employee ID",
                        max_length=50,
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, help_text="Department or faculty", max_length=100
                    ),
                ),
                (
                    "year_of_study",
                    models.PositiveIntegerField(
                        blank=True, help_text="Year of study (for students)", null=True
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="institutions.institution",
                    ),
                ),
            ],
            options={
                "verbose_name": "Institution Membership",
                "verbose_name_plural": "Institution Memberships",
                "db_table": "institution_memberships",
            },
        ),
        migrations.CreateModel(
            name="InstitutionInvitation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("institution_name", models.CharField(max_length=255)),
                ("institution_email", models.EmailField(max_length=254)),
                ("contact_person_name", models.CharField(max_length=255)),
                ("contact_person_email", models.EmailField(max_length=254)),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("expires_at", models.DateTimeField()),
                ("is_used", models.BooleanField(default=False)),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                (
                    "invited_by_user_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("invitation_message", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "created_institution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="invitations",
                        to="institutions.institution",
                    ),
                ),
            ],
            options={
                "db_table": "institution_invitations",
            },
        ),
        migrations.AddIndex(
            model_name="institution",
            index=models.Index(fields=["name"], name="institution_name_e35db9_idx"),
        ),
        migrations.AddIndex(
            model_name="institution",
            index=models.Index(fields=["status"], name="institution_status_679ca0_idx"),
        ),
        migrations.AddIndex(
            model_name="institution",
            index=models.Index(
                fields=["institution_type"], name="institution_institu_60222d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="institution",
            index=models.Index(
                fields=["is_verified"], name="institution_is_veri_8e880b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="institution",
            index=models.Index(
                fields=["country", "state_province"],
                name="institution_country_314ee8_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="institution",
            unique_together={("name", "country")},
        ),
        migrations.AddIndex(
            model_name="universityregistrationcode",
            index=models.Index(fields=["code"], name="university__code_1019ed_idx"),
        ),
        migrations.AddIndex(
            model_name="universityregistrationcode",
            index=models.Index(
                fields=["institution", "is_active"],
                name="university__institu_f4435a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="universityregistrationcode",
            index=models.Index(
                fields=["valid_from", "valid_until"],
                name="university__valid_f_d9e4ea_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="universityregistrationcode",
            unique_together={("institution", "code")},
        ),
        migrations.AddIndex(
            model_name="institutionprogram",
            index=models.Index(
                fields=["institution", "is_active"],
                name="institution_institu_d90689_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="institutionprogram",
            index=models.Index(
                fields=["department", "is_active"],
                name="institution_departm_a139bc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="institutionprogram",
            index=models.Index(
                fields=["degree_type"], name="institution_degree__f79e95_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="institutionprogram",
            unique_together={("institution", "name"), ("institution", "code")},
        ),
        migrations.AddIndex(
            model_name="institutionmembership",
            index=models.Index(
                fields=["user_profile_id"], name="institution_user_pr_43ce3b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="institutionmembership",
            index=models.Index(
                fields=["institution"], name="institution_institu_c6dd34_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="institutionmembership",
            index=models.Index(fields=["role"], name="institution_role_bd3dd7_idx"),
        ),
        migrations.AddIndex(
            model_name="institutionmembership",
            index=models.Index(fields=["status"], name="institution_status_72eaac_idx"),
        ),
        migrations.AddIndex(
            model_name="institutionmembership",
            index=models.Index(
                fields=["joined_at"], name="institution_joined__f370be_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="institutionmembership",
            unique_together={("user_profile_id", "institution")},
        ),
        migrations.AddIndex(
            model_name="institutioninvitation",
            index=models.Index(fields=["token"], name="institution_token_c40b0d_idx"),
        ),
        migrations.AddIndex(
            model_name="institutioninvitation",
            index=models.Index(
                fields=["institution_email"], name="institution_institu_dc4f3b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="institutioninvitation",
            index=models.Index(
                fields=["is_used"], name="institution_is_used_40df32_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="institutioninvitation",
            index=models.Index(
                fields=["expires_at"], name="institution_expires_231540_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="institutiondepartment",
            index=models.Index(
                fields=["institution", "is_active"],
                name="institution_institu_dcb560_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="institutiondepartment",
            index=models.Index(fields=["name"], name="institution_name_7a3c58_idx"),
        ),
        migrations.AddIndex(
            model_name="institutiondepartment",
            index=models.Index(fields=["code"], name="institution_code_578f1e_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="institutiondepartment",
            unique_together={("institution", "name"), ("institution", "code")},
        ),
    ]
