# Generated by Django 4.2.23 on 2025-08-26 18:26

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_id",
                    models.IntegerField(
                        help_text="User ID from authentication service"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("employer", "Employer"),
                            ("institution_admin", "Institution Admin"),
                            ("super_admin", "Super Admin"),
                            ("system", "System"),
                        ],
                        help_text="User role in the system",
                        max_length=20,
                    ),
                ),
                (
                    "institution_id",
                    models.IntegerField(
                        blank=True,
                        help_text="Institution ID for institution-related roles",
                        null=True,
                    ),
                ),
                (
                    "company_id",
                    models.UUIDField(
                        blank=True,
                        help_text="Company ID for employer-related roles",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this role assignment is active"
                    ),
                ),
                (
                    "assigned_by_user_id",
                    models.IntegerField(
                        blank=True,
                        help_text="User ID who assigned this role",
                        null=True,
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this role was assigned"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this role assignment expires (optional)",
                        null=True,
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional role-specific permissions",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional role metadata"
                    ),
                ),
            ],
            options={
                "verbose_name": "User Role",
                "verbose_name_plural": "User Roles",
                "db_table": "user_roles",
                "indexes": [
                    models.Index(
                        fields=["user_id"], name="user_roles_user_id_05df60_idx"
                    ),
                    models.Index(fields=["role"], name="user_roles_role_582040_idx"),
                    models.Index(
                        fields=["institution_id"], name="user_roles_institu_cc990e_idx"
                    ),
                    models.Index(
                        fields=["company_id"], name="user_roles_company_602c0d_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="user_roles_is_acti_a67329_idx"
                    ),
                    models.Index(
                        fields=["user_id", "role"], name="user_roles_user_id_aae85d_idx"
                    ),
                ],
                "unique_together": {
                    ("user_id", "role", "institution_id", "company_id")
                },
            },
        ),
        migrations.CreateModel(
            name="RolePermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Permission name (e.g., 'can_manage_internships')",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Human-readable description of the permission"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        help_text="Permission category (e.g., 'internships', 'users', 'analytics')",
                        max_length=50,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this permission is currently active",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role Permission",
                "verbose_name_plural": "Role Permissions",
                "db_table": "role_permissions",
                "indexes": [
                    models.Index(fields=["name"], name="role_permis_name_b81b36_idx"),
                    models.Index(
                        fields=["category"], name="role_permis_categor_562b12_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="role_permis_is_acti_791066_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RoleInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "email",
                    models.EmailField(
                        help_text="Email address of the invited user", max_length=254
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("employer", "Employer"),
                            ("institution_admin", "Institution Admin"),
                            ("super_admin", "Super Admin"),
                            ("system", "System"),
                        ],
                        help_text="Role to be assigned upon acceptance",
                        max_length=20,
                    ),
                ),
                (
                    "institution_id",
                    models.IntegerField(
                        blank=True,
                        help_text="Institution ID for institution-related roles",
                        null=True,
                    ),
                ),
                (
                    "employer_id",
                    models.IntegerField(
                        blank=True,
                        help_text="Employer ID for employer-related roles",
                        null=True,
                    ),
                ),
                (
                    "token",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unique invitation token",
                        unique=True,
                    ),
                ),
                (
                    "invited_by_user_id",
                    models.IntegerField(help_text="User ID who sent the invitation"),
                ),
                (
                    "is_used",
                    models.BooleanField(
                        default=False, help_text="Whether the invitation has been used"
                    ),
                ),
                (
                    "used_at",
                    models.DateTimeField(
                        blank=True, help_text="When the invitation was used", null=True
                    ),
                ),
                (
                    "used_by_user_id",
                    models.IntegerField(
                        blank=True,
                        help_text="User ID who used the invitation",
                        null=True,
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When the invitation expires"),
                ),
                (
                    "permissions",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional permissions to be granted",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional invitation metadata",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role Invitation",
                "verbose_name_plural": "Role Invitations",
                "db_table": "role_invitations",
                "indexes": [
                    models.Index(fields=["email"], name="role_invita_email_b38461_idx"),
                    models.Index(fields=["token"], name="role_invita_token_859df7_idx"),
                    models.Index(fields=["role"], name="role_invita_role_706ae2_idx"),
                    models.Index(
                        fields=["is_used"], name="role_invita_is_used_9587f5_idx"
                    ),
                    models.Index(
                        fields=["expires_at"], name="role_invita_expires_5367aa_idx"
                    ),
                    models.Index(
                        fields=["invited_by_user_id"],
                        name="role_invita_invited_b02796_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RoleAssignmentHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_id",
                    models.IntegerField(
                        help_text="User ID from authentication service"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("employer", "Employer"),
                            ("institution_admin", "Institution Admin"),
                            ("super_admin", "Super Admin"),
                            ("system", "System"),
                        ],
                        help_text="Role that was assigned/removed",
                        max_length=20,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("assigned", "Assigned"),
                            ("removed", "Removed"),
                            ("updated", "Updated"),
                            ("expired", "Expired"),
                        ],
                        help_text="Action performed on the role",
                        max_length=20,
                    ),
                ),
                (
                    "institution_id",
                    models.IntegerField(
                        blank=True, help_text="Institution ID if applicable", null=True
                    ),
                ),
                (
                    "employer_id",
                    models.IntegerField(
                        blank=True, help_text="Employer ID if applicable", null=True
                    ),
                ),
                (
                    "performed_by_user_id",
                    models.IntegerField(
                        blank=True,
                        help_text="User ID who performed the action",
                        null=True,
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True, help_text="Reason for the role change"
                    ),
                ),
                (
                    "previous_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Previous role data (for updates)",
                    ),
                ),
                (
                    "new_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="New role data (for updates)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role Assignment History",
                "verbose_name_plural": "Role Assignment Histories",
                "db_table": "role_assignment_history",
                "indexes": [
                    models.Index(
                        fields=["user_id"], name="role_assign_user_id_4edae0_idx"
                    ),
                    models.Index(fields=["role"], name="role_assign_role_236772_idx"),
                    models.Index(
                        fields=["action"], name="role_assign_action_459178_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="role_assign_created_94d48b_idx"
                    ),
                    models.Index(
                        fields=["user_id", "created_at"],
                        name="role_assign_user_id_4f4ca4_idx",
                    ),
                ],
            },
        ),
    ]
