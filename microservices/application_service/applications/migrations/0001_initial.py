# Generated by Django 4.2.23 on 2025-08-27 08:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "student_id",
                    models.PositiveIntegerField(
                        db_index=True, help_text="Reference to student in user service"
                    ),
                ),
                (
                    "internship_id",
                    models.PositiveIntegerField(
                        db_index=True,
                        help_text="Reference to internship in internship service",
                    ),
                ),
                (
                    "application_date",
                    models.DateTimeField(auto_now_add=True, db_index=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("reviewed", "Reviewed"),
                            ("interview_scheduled", "Interview Scheduled"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "previous_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending", "Pending"),
                            ("reviewed", "Reviewed"),
                            ("interview_scheduled", "Interview Scheduled"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        help_text="Previous status for audit trail",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "status_changed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the status was last changed",
                        null=True,
                    ),
                ),
                (
                    "status_changed_by_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="ID of user who changed the status",
                        null=True,
                    ),
                ),
                ("cover_letter", models.TextField(blank=True)),
                ("resume", models.FileField(blank=True, upload_to="resumes/")),
                (
                    "reviewed_by_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="ID of user who reviewed the application",
                        null=True,
                    ),
                ),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("review_notes", models.TextField(blank=True)),
                ("interview_date", models.DateTimeField(blank=True, null=True)),
                ("interview_notes", models.TextField(blank=True)),
                ("interview_location", models.CharField(blank=True, max_length=255)),
                (
                    "interview_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("in_person", "In Person"),
                            ("video_call", "Video Call"),
                            ("phone_call", "Phone Call"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "employer_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Reference to employer in user service",
                        null=True,
                    ),
                ),
                (
                    "custom_answers",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Answers to custom application questions",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("web", "Web Application"),
                            ("mobile", "Mobile Application"),
                            ("api", "API"),
                            ("import", "Data Import"),
                        ],
                        default="web",
                        max_length=50,
                    ),
                ),
                (
                    "priority_score",
                    models.FloatField(
                        default=0.0,
                        help_text="Calculated priority score for ranking applications",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
            ],
            options={
                "db_table": "applications",
                "ordering": ["-application_date"],
            },
        ),
        migrations.CreateModel(
            name="SupervisorFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "supervisor_id",
                    models.PositiveIntegerField(
                        help_text="ID of supervisor providing feedback"
                    ),
                ),
                ("feedback", models.TextField()),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        help_text="Rating from 1 to 5",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "technical_skills_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "communication_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "professionalism_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "would_recommend",
                    models.BooleanField(
                        blank=True,
                        help_text="Would recommend this student for future opportunities",
                        null=True,
                    ),
                ),
                (
                    "improvement_areas",
                    models.TextField(
                        blank=True, help_text="Areas where student can improve"
                    ),
                ),
                (
                    "strengths",
                    models.TextField(blank=True, help_text="Student's key strengths"),
                ),
                (
                    "application",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supervisor_feedback",
                        to="applications.application",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ApplicationStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "from_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending", "Pending"),
                            ("reviewed", "Reviewed"),
                            ("interview_scheduled", "Interview Scheduled"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "to_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("reviewed", "Reviewed"),
                            ("interview_scheduled", "Interview Scheduled"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "changed_by_id",
                    models.PositiveIntegerField(
                        help_text="ID of user who made the change"
                    ),
                ),
                (
                    "reason",
                    models.TextField(blank=True, help_text="Reason for status change"),
                ),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="applications.application",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Application Status Histories",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ApplicationNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author_id",
                    models.PositiveIntegerField(
                        help_text="ID of user who created the note"
                    ),
                ),
                ("content", models.TextField()),
                (
                    "is_internal",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this note is internal only or visible to student",
                    ),
                ),
                (
                    "note_type",
                    models.CharField(
                        choices=[
                            ("general", "General Note"),
                            ("review", "Review Note"),
                            ("interview", "Interview Note"),
                            ("decision", "Decision Note"),
                            ("follow_up", "Follow-up Note"),
                        ],
                        default="general",
                        max_length=20,
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="applications.application",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ApplicationDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("resume", "Resume/CV"),
                            ("cover_letter", "Cover Letter"),
                            ("transcript", "Academic Transcript"),
                            ("portfolio", "Portfolio"),
                            ("recommendation", "Letter of Recommendation"),
                            ("certificate", "Certificate"),
                            ("other", "Other Document"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                ("file", models.FileField(upload_to="application_documents/")),
                ("original_filename", models.CharField(max_length=255)),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="File size in bytes"),
                ),
                (
                    "uploaded_by_id",
                    models.PositiveIntegerField(
                        help_text="ID of user who uploaded the document"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("verified_by_id", models.PositiveIntegerField(blank=True, null=True)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="applications.application",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["status", "application_date"],
                name="application_status_96d051_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["student_id", "status"], name="application_student_a8a36b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["internship_id", "status"],
                name="application_interns_c406d5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["status_changed_at"], name="application_status__34399f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["employer_id", "status"], name="application_employe_c7b975_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["priority_score"], name="application_priorit_11ad7f_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="application",
            unique_together={("student_id", "internship_id")},
        ),
        migrations.AddIndex(
            model_name="supervisorfeedback",
            index=models.Index(
                fields=["supervisor_id"], name="application_supervi_415012_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supervisorfeedback",
            index=models.Index(fields=["rating"], name="application_rating_1a492d_idx"),
        ),
        migrations.AddIndex(
            model_name="applicationstatushistory",
            index=models.Index(
                fields=["application", "created_at"],
                name="application_applica_1aaa33_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="applicationstatushistory",
            index=models.Index(
                fields=["to_status"], name="application_to_stat_6544c7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="applicationnote",
            index=models.Index(
                fields=["application", "note_type"],
                name="application_applica_dc3e57_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="applicationnote",
            index=models.Index(
                fields=["author_id"], name="application_author__85ae77_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="applicationnote",
            index=models.Index(
                fields=["is_internal"], name="application_is_inte_e91458_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="applicationdocument",
            index=models.Index(
                fields=["application", "document_type"],
                name="application_applica_2a046d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="applicationdocument",
            index=models.Index(
                fields=["is_verified"], name="application_is_veri_f48892_idx"
            ),
        ),
    ]
