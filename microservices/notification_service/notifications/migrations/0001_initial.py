# Generated by Django 4.2.23 on 2025-08-27 09:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("authentication", "Authentication"),
                            ("registration", "Registration"),
                            ("verification", "Verification"),
                            ("password_reset", "Password Reset"),
                            ("internship", "Internship"),
                            ("application", "Application"),
                            ("system", "System"),
                            ("marketing", "Marketing"),
                            ("reminder", "Reminder"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("in_app", "In-App Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("subject_template", models.CharField(blank=True, max_length=200)),
                ("body_template", models.TextField()),
                ("html_template", models.TextField(blank=True)),
                ("description", models.TextField(blank=True)),
                (
                    "variables",
                    models.JSONField(
                        default=dict, help_text="Expected template variables"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "notification_templates",
                "indexes": [
                    models.Index(
                        fields=["category", "notification_type"],
                        name="notificatio_categor_dfcfa5_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="notificatio_is_acti_f33840_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("user_id", models.CharField(max_length=50, unique=True)),
                ("email_enabled", models.BooleanField(default=True)),
                ("email_categories", models.JSONField(default=list)),
                ("sms_enabled", models.BooleanField(default=False)),
                ("sms_categories", models.JSONField(default=list)),
                ("push_enabled", models.BooleanField(default=True)),
                ("push_categories", models.JSONField(default=list)),
                ("in_app_enabled", models.BooleanField(default=True)),
                ("in_app_categories", models.JSONField(default=list)),
                ("quiet_hours_enabled", models.BooleanField(default=False)),
                ("quiet_hours_start", models.TimeField(blank=True, null=True)),
                ("quiet_hours_end", models.TimeField(blank=True, null=True)),
                (
                    "quiet_hours_timezone",
                    models.CharField(default="UTC", max_length=50),
                ),
                ("max_emails_per_day", models.PositiveIntegerField(default=50)),
                ("max_sms_per_day", models.PositiveIntegerField(default=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "notification_preferences",
                "indexes": [
                    models.Index(
                        fields=["user_id"], name="notificatio_user_id_553b46_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="NotificationBatch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("total_count", models.PositiveIntegerField(default=0)),
                ("processed_count", models.PositiveIntegerField(default=0)),
                ("success_count", models.PositiveIntegerField(default=0)),
                ("failed_count", models.PositiveIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("source_service", models.CharField(blank=True, max_length=50)),
                ("created_by", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "notification_batches",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "scheduled_at"],
                        name="notificatio_status_2f81fa_idx",
                    ),
                    models.Index(
                        fields=["source_service"], name="notificatio_source__358bee_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "recipient_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                ("recipient_phone", models.CharField(blank=True, max_length=20)),
                ("recipient_user_id", models.CharField(blank=True, max_length=50)),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("in_app", "In-App Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("authentication", "Authentication"),
                            ("registration", "Registration"),
                            ("verification", "Verification"),
                            ("password_reset", "Password Reset"),
                            ("internship", "Internship"),
                            ("application", "Application"),
                            ("system", "System"),
                            ("marketing", "Marketing"),
                            ("reminder", "Reminder"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=200)),
                ("message", models.TextField()),
                ("html_content", models.TextField(blank=True)),
                ("template_variables", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("max_retries", models.PositiveIntegerField(default=3)),
                ("error_message", models.TextField(blank=True)),
                ("external_id", models.CharField(blank=True, max_length=100)),
                ("provider", models.CharField(blank=True, max_length=50)),
                ("source_service", models.CharField(blank=True, max_length=50)),
                ("reference_id", models.CharField(blank=True, max_length=100)),
                ("metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="notifications.notificationtemplate",
                    ),
                ),
            ],
            options={
                "db_table": "notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("attempt_number", models.PositiveIntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        max_length=20,
                    ),
                ),
                ("provider_response", models.JSONField(default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("attempted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "response_time_ms",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="notifications.notification",
                    ),
                ),
            ],
            options={
                "db_table": "notification_logs",
                "ordering": ["-attempted_at"],
                "indexes": [
                    models.Index(
                        fields=["notification", "attempt_number"],
                        name="notificatio_notific_9f6eb7_idx",
                    ),
                    models.Index(
                        fields=["status", "attempted_at"],
                        name="notificatio_status_d55b41_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["status", "scheduled_at"], name="notificatio_status_2ea0f1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["recipient_email"], name="notificatio_recipie_de4d0f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["recipient_phone"], name="notificatio_recipie_c1a89a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["recipient_user_id"], name="notificatio_recipie_cedf2f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["category", "created_at"], name="notificatio_categor_57c79b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["source_service", "reference_id"],
                name="notificatio_source__abb440_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["notification_type", "status"],
                name="notificatio_notific_21f913_idx",
            ),
        ),
    ]
