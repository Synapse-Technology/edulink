# Generated by Django 4.2.23 on 2025-08-26 17:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_email_verified", models.BooleanField(default=False)),
                ("email_verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("institution_admin", "Institution Admin"),
                            ("employer", "Employer"),
                            ("super_admin", "Super Admin"),
                        ],
                        default="student",
                        max_length=30,
                    ),
                ),
                ("failed_login_attempts", models.PositiveIntegerField(default=0)),
                ("account_locked_until", models.DateTimeField(blank=True, null=True)),
                (
                    "password_changed_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_password_reset", models.DateTimeField(blank=True, null=True)),
                ("two_factor_enabled", models.BooleanField(default=False)),
                ("backup_tokens", models.JSONField(blank=True, default=list)),
                (
                    "user_profile_id",
                    models.UUIDField(
                        blank=True, help_text="ID in User Service", null=True
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "auth_user",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "authuser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="authentication.authuser",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("national_id", models.CharField(blank=True, max_length=20, null=True)),
                ("email_verified", models.BooleanField(default=False)),
                ("profile_service_id", models.UUIDField(blank=True, null=True)),
            ],
            options={
                "db_table": "auth_user_legacy",
            },
            bases=("authentication.authuser",),
        ),
        migrations.CreateModel(
            name="EmailOTP",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("code", models.CharField(max_length=6)),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("login", "Login Verification"),
                            ("password_reset", "Password Reset"),
                            ("email_verification", "Email Verification"),
                            ("two_factor", "Two Factor Authentication"),
                        ],
                        default="login",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                ("is_used", models.BooleanField(default=False)),
                ("attempts", models.PositiveIntegerField(default=0)),
            ],
            options={
                "db_table": "auth_email_otp",
                "indexes": [
                    models.Index(
                        fields=["email", "purpose"], name="auth_email__email_d54eb5_idx"
                    ),
                    models.Index(fields=["code"], name="auth_email__code_1ab8bf_idx"),
                    models.Index(
                        fields=["created_at"], name="auth_email__created_fe6be7_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RefreshToken",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("token", models.TextField(unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("is_blacklisted", models.BooleanField(default=False)),
                ("device_id", models.CharField(blank=True, max_length=255)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refresh_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "auth_refresh_token",
            },
        ),
        migrations.CreateModel(
            name="PasswordResetToken",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("is_used", models.BooleanField(default=False)),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="password_reset_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "auth_password_reset_token",
            },
        ),
        migrations.CreateModel(
            name="Invite",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("institution_admin", "Institution Admin"),
                            ("employer", "Employer"),
                            ("super_admin", "Super Admin"),
                        ],
                        max_length=30,
                    ),
                ),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("is_used", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                (
                    "institution_id",
                    models.UUIDField(
                        blank=True,
                        help_text="Institution ID from User Service",
                        null=True,
                    ),
                ),
                (
                    "employer_id",
                    models.UUIDField(
                        blank=True, help_text="Employer ID from User Service", null=True
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "invited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_invites",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "auth_invite",
            },
        ),
        migrations.AddIndex(
            model_name="authuser",
            index=models.Index(fields=["email"], name="auth_user_email_ece7f7_idx"),
        ),
        migrations.AddIndex(
            model_name="authuser",
            index=models.Index(fields=["role"], name="auth_user_role_f90fd2_idx"),
        ),
        migrations.AddIndex(
            model_name="authuser",
            index=models.Index(
                fields=["is_active"], name="auth_user_is_acti_9dcf31_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="authuser",
            index=models.Index(
                fields=["user_profile_id"], name="auth_user_user_pr_22f041_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="authuser",
            index=models.Index(
                fields=["created_at"], name="auth_user_created_2cecd0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="authuser",
            index=models.Index(
                fields=["updated_at"], name="auth_user_updated_d3297b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["profile_service_id"], name="auth_user_l_profile_628667_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="refreshtoken",
            index=models.Index(
                fields=["user", "is_blacklisted"], name="auth_refres_user_id_06394b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="refreshtoken",
            index=models.Index(fields=["token"], name="auth_refres_token_09c3b2_idx"),
        ),
        migrations.AddIndex(
            model_name="refreshtoken",
            index=models.Index(
                fields=["expires_at"], name="auth_refres_expires_6976f5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="refreshtoken",
            index=models.Index(
                fields=["device_id"], name="auth_refres_device__6ef34c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="passwordresettoken",
            index=models.Index(
                fields=["user", "is_used"], name="auth_passwo_user_id_7ffbe2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="passwordresettoken",
            index=models.Index(fields=["token"], name="auth_passwo_token_ceb1cb_idx"),
        ),
        migrations.AddIndex(
            model_name="passwordresettoken",
            index=models.Index(
                fields=["expires_at"], name="auth_passwo_expires_1116e7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invite",
            index=models.Index(fields=["email"], name="auth_invite_email_06637f_idx"),
        ),
        migrations.AddIndex(
            model_name="invite",
            index=models.Index(fields=["token"], name="auth_invite_token_eed519_idx"),
        ),
        migrations.AddIndex(
            model_name="invite",
            index=models.Index(
                fields=["is_used"], name="auth_invite_is_used_6490ee_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invite",
            index=models.Index(
                fields=["expires_at"], name="auth_invite_expires_5d22ab_idx"
            ),
        ),
    ]
