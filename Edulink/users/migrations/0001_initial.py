# Generated by Django 5.2.4 on 2025-07-30 07:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("institutions", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SystemSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=100, unique=True)),
                ("value", models.CharField(max_length=500)),
            ],
            options={
                "verbose_name": "System Setting",
                "verbose_name_plural": "System Settings",
            },
        ),
        migrations.CreateModel(
            name="EmployerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("phone_number", models.CharField(max_length=20, unique=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        default="profile_pics/default.jpg",
                        null=True,
                        upload_to="profile_pics/",
                    ),
                ),
                ("phone_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("company_name", models.CharField(db_index=True, max_length=255)),
                ("company_description", models.TextField(blank=True)),
                (
                    "industry",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "location",
                    models.CharField(blank=True, db_index=True, max_length=255),
                ),
                (
                    "company_size",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1-10", "1-10 employees"),
                            ("11-50", "11-50 employees"),
                            ("51-200", "51-200 employees"),
                            ("201-500", "201-500 employees"),
                            ("501-1000", "501-1000 employees"),
                            ("1000+", "1000+ employees"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                ("department", models.CharField(blank=True, max_length=100, null=True)),
                ("position", models.CharField(blank=True, max_length=100, null=True)),
                ("is_verified", models.BooleanField(db_index=True, default=False)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employer_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Employer Profile",
                "verbose_name_plural": "Employer Profiles",
            },
        ),
        migrations.CreateModel(
            name="InstitutionProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("phone_number", models.CharField(max_length=20, unique=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        default="profile_pics/default.jpg",
                        null=True,
                        upload_to="profile_pics/",
                    ),
                ),
                ("phone_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("position", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "institution",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institutions.institution",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="institution_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("phone_number", models.CharField(max_length=20)),
                (
                    "profile_picture",
                    models.ImageField(
                        default="profile_pics/default.jpg", upload_to="profile_pics/"
                    ),
                ),
                ("phone_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "institution_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "registration_number",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Registration number must contain only uppercase letters, numbers, hyphens, and slashes.",
                                regex="^[A-Z0-9-/]+$",
                            )
                        ],
                    ),
                ),
                (
                    "year_of_study",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "First Year"),
                            (2, "Second Year"),
                            (3, "Third Year"),
                            (4, "Fourth Year"),
                            (5, "Fifth Year"),
                            (6, "Sixth Year"),
                        ]
                    ),
                ),
                (
                    "university_verified",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Verified through university system integration",
                    ),
                ),
                (
                    "national_id_verified",
                    models.BooleanField(
                        default=False,
                        help_text="National ID verified against university records",
                    ),
                ),
                (
                    "last_university_sync",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last time data was synced with university system",
                        null=True,
                    ),
                ),
                (
                    "university_code_used",
                    models.CharField(
                        blank=True,
                        help_text="University registration code used during registration",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "national_id",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="National ID must contain only numbers and uppercase letters.",
                                regex="^[0-9A-Z]+$",
                            )
                        ],
                    ),
                ),
                ("skills", models.JSONField(blank=True, default=list)),
                ("interests", models.JSONField(blank=True, default=list)),
                (
                    "internship_status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                        ],
                        db_index=True,
                        default="not_started",
                        max_length=20,
                    ),
                ),
                (
                    "github_url",
                    models.URLField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "twitter_url",
                    models.URLField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "resume",
                    models.FileField(blank=True, null=True, upload_to="resumes/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campus",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="students",
                        to="institutions.campus",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="students",
                        to="institutions.course",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="students",
                        to="institutions.department",
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="students",
                        to="institutions.institution",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("institution_admin", "Institution Admin"),
                            ("employer", "Employer"),
                            ("super_admin", "Super Admin"),
                        ],
                        max_length=30,
                    ),
                ),
                ("granted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "employer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="users.employerprofile",
                    ),
                ),
                (
                    "granted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="granted_roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="institutions.institution",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="employerprofile",
            index=models.Index(
                fields=["company_name", "industry"],
                name="users_emplo_company_8dac4a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="employerprofile",
            index=models.Index(
                fields=["location", "company_size"],
                name="users_emplo_locatio_3ce096_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="employerprofile",
            index=models.Index(
                fields=["is_verified", "created_at"],
                name="users_emplo_is_veri_d1b2e3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="studentprofile",
            index=models.Index(
                fields=["institution", "course"], name="users_stude_institu_1bbffd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="studentprofile",
            index=models.Index(
                fields=["internship_status", "year_of_study"],
                name="users_stude_interns_265c03_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="studentprofile",
            index=models.Index(
                fields=["university_verified", "created_at"],
                name="users_stude_univers_aa0204_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="studentprofile",
            index=models.Index(
                fields=["registration_number"], name="users_stude_registr_6414fc_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="studentprofile",
            constraint=models.UniqueConstraint(
                condition=models.Q(("registration_number__isnull", False)),
                fields=("institution", "registration_number"),
                name="unique_registration_per_institution",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userrole",
            unique_together={("user", "role", "institution", "employer")},
        ),
    ]
