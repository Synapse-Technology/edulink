# Generated by Django 5.2.4 on 2025-07-30 07:09

import django.db.models.deletion
import django.utils.timezone
import security.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FailedLoginAttempt",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        validators=[security.models.validate_ip_address]
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("invalid_credentials", "Invalid Credentials"),
                            ("account_locked", "Account Locked"),
                            ("account_disabled", "Account Disabled"),
                            ("rate_limited", "Rate Limited"),
                        ],
                        default="invalid_credentials",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["email", "timestamp"],
                        name="security_fa_email_d1e192_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="security_fa_ip_addr_7c0157_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SecurityConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=100, unique=True)),
                ("value", models.TextField()),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["key"],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("read", "Read"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("permission_change", "Permission Change"),
                            ("role_assignment", "Role Assignment"),
                            ("role_removal", "Role Removal"),
                            ("config_change", "Configuration Change"),
                            ("user_registration", "User Registration"),
                            ("password_reset_request", "Password Reset Request"),
                            ("password_reset_confirm", "Password Reset Confirmation"),
                            ("password_change", "Password Change"),
                            ("email_verification", "Email Verification"),
                            (
                                "email_verification_success",
                                "Email Verification Success",
                            ),
                            ("invite_created", "Invite Created"),
                            ("invite_used", "Invite Used"),
                            ("invite_registration", "Invite Registration"),
                            ("data_export", "Data Export"),
                            ("data_import", "Data Import"),
                            ("file_upload", "File Upload"),
                            ("file_download", "File Download"),
                            ("api_access", "API Access"),
                            ("admin_action", "Admin Action"),
                            ("bulk_operation", "Bulk Operation"),
                            ("security_scan", "Security Scan"),
                            ("backup_created", "Backup Created"),
                            ("backup_restored", "Backup Restored"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("failure", "Failure"),
                            ("partial", "Partial Success"),
                            ("error", "Error"),
                        ],
                        db_index=True,
                        default="success",
                        max_length=20,
                    ),
                ),
                ("resource_type", models.CharField(db_index=True, max_length=100)),
                (
                    "resource_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("description", models.TextField()),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        db_index=True, validators=[security.models.validate_ip_address]
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                ("session_key", models.CharField(blank=True, max_length=40)),
                (
                    "request_id",
                    models.CharField(
                        blank=True,
                        help_text="Unique request identifier",
                        max_length=100,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "duration_ms",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Operation duration in milliseconds",
                        null=True,
                    ),
                ),
                ("changes", models.JSONField(blank=True, default=dict)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("error_code", models.CharField(blank=True, max_length=50)),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        db_index=True,
                        default="low",
                        max_length=20,
                    ),
                ),
                (
                    "compliance_relevant",
                    models.BooleanField(db_index=True, default=False),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="security_au_user_id_88bbbb_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="security_au_action_85f886_idx",
                    ),
                    models.Index(
                        fields=["resource_type", "timestamp"],
                        name="security_au_resourc_7b7387_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="security_au_ip_addr_f227e7_idx",
                    ),
                    models.Index(
                        fields=["result", "timestamp"],
                        name="security_au_result_a3fdcd_idx",
                    ),
                    models.Index(
                        fields=["risk_level", "compliance_relevant"],
                        name="security_au_risk_le_21d9d8_idx",
                    ),
                    models.Index(
                        fields=["request_id"], name="security_au_request_82c255_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="LoginHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        db_index=True, validators=[security.models.validate_ip_address]
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "login_type",
                    models.CharField(
                        choices=[
                            ("web", "Web Login"),
                            ("api", "API Login"),
                            ("mobile", "Mobile App"),
                            ("desktop", "Desktop App"),
                            ("sso", "Single Sign-On"),
                            ("2fa", "Two-Factor Authentication"),
                        ],
                        db_index=True,
                        default="web",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("blocked", "Blocked"),
                            ("suspicious", "Suspicious"),
                        ],
                        db_index=True,
                        default="success",
                        max_length=20,
                    ),
                ),
                ("session_key", models.CharField(blank=True, max_length=40)),
                (
                    "country",
                    models.CharField(
                        blank=True, help_text="ISO country code", max_length=2
                    ),
                ),
                ("city", models.CharField(blank=True, max_length=100)),
                ("device_type", models.CharField(blank=True, max_length=50)),
                ("browser", models.CharField(blank=True, max_length=100)),
                ("os", models.CharField(blank=True, max_length=100)),
                ("is_suspicious", models.BooleanField(db_index=True, default=False)),
                (
                    "risk_score",
                    models.PositiveIntegerField(
                        default=0, help_text="Risk score from 0-100"
                    ),
                ),
                ("failure_reason", models.CharField(blank=True, max_length=100)),
                ("logout_timestamp", models.DateTimeField(blank=True, null=True)),
                ("session_duration", models.DurationField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="login_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Login Histories",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="security_lo_user_id_810d2f_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="security_lo_ip_addr_423e3f_idx",
                    ),
                    models.Index(
                        fields=["status", "timestamp"],
                        name="security_lo_status_f9633a_idx",
                    ),
                    models.Index(
                        fields=["is_suspicious", "risk_score"],
                        name="security_lo_is_susp_cd8371_idx",
                    ),
                    models.Index(
                        fields=["login_type", "timestamp"],
                        name="security_lo_login_t_80aa74_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SecurityAuditTrail",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("read", "Read"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("permission_change", "Permission Change"),
                            ("role_assignment", "Role Assignment"),
                            ("role_removal", "Role Removal"),
                            ("config_change", "Configuration Change"),
                            ("user_registration", "User Registration"),
                            ("password_reset_request", "Password Reset Request"),
                            ("password_reset_confirm", "Password Reset Confirmation"),
                            ("password_change", "Password Change"),
                            ("email_verification", "Email Verification"),
                            (
                                "email_verification_success",
                                "Email Verification Success",
                            ),
                            ("invite_created", "Invite Created"),
                            ("invite_used", "Invite Used"),
                            ("invite_registration", "Invite Registration"),
                            ("security_setting_changed", "Security Setting Changed"),
                            ("backup_created", "Backup Created"),
                            ("backup_restored", "Backup Restored"),
                            ("system_maintenance", "System Maintenance"),
                            ("security_scan_initiated", "Security Scan Initiated"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                ("resource_type", models.CharField(db_index=True, max_length=100)),
                (
                    "resource_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("description", models.TextField()),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        db_index=True, validators=[security.models.validate_ip_address]
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                ("session_key", models.CharField(blank=True, max_length=40)),
                ("old_values", models.JSONField(blank=True, default=dict)),
                ("new_values", models.JSONField(blank=True, default=dict)),
                ("changes", models.JSONField(blank=True, default=dict)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "target_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_trails_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_trails_performed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Security Audit Trail",
                "verbose_name_plural": "Security Audit Trails",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="security_se_user_id_2e12be_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="security_se_action_645419_idx",
                    ),
                    models.Index(
                        fields=["resource_type", "timestamp"],
                        name="security_se_resourc_ea8cc7_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="security_se_ip_addr_fe629c_idx",
                    ),
                    models.Index(
                        fields=["target_user", "timestamp"],
                        name="security_se_target__1fa43e_idx",
                    ),
                    models.Index(
                        fields=["success", "timestamp"],
                        name="security_se_success_8875d2_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SecurityEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("login_success", "Successful Login"),
                            ("login_failed", "Failed Login"),
                            ("logout", "Logout"),
                            ("password_change", "Password Change"),
                            ("password_reset", "Password Reset"),
                            ("password_reset_request", "Password Reset Request"),
                            ("password_reset_confirm", "Password Reset Confirmation"),
                            ("account_locked", "Account Locked"),
                            ("account_unlocked", "Account Unlocked"),
                            ("account_created", "Account Created"),
                            ("account_deleted", "Account Deleted"),
                            ("suspicious_activity", "Suspicious Activity"),
                            ("data_access", "Data Access"),
                            ("data_export", "Data Export"),
                            ("permission_denied", "Permission Denied"),
                            ("permission_change", "Permission Change"),
                            ("role_change", "Role Change"),
                            ("rate_limit_exceeded", "Rate Limit Exceeded"),
                            ("csrf_attack", "CSRF Attack Attempt"),
                            ("sql_injection", "SQL Injection Attempt"),
                            ("xss_attempt", "XSS Attack Attempt"),
                            ("user_registration", "User Registration"),
                            ("user_login", "User Login"),
                            ("user_logout", "User Logout"),
                            ("failed_login", "Failed Login Attempt"),
                            ("brute_force_attempt", "Brute Force Attempt"),
                            ("user_profile_change", "User Profile Change"),
                            (
                                "email_verification_success",
                                "Email Verification Success",
                            ),
                            ("email_verification_failed", "Email Verification Failed"),
                            ("failed_password_change", "Failed Password Change"),
                            ("invite_created", "Invite Created"),
                            ("invite_used", "Invite Used"),
                            ("invite_registration", "Invite Registration"),
                            ("2fa_login_failed", "2FA Login Failed"),
                            ("2fa_otp_generated", "2FA OTP Generated"),
                            ("2fa_verify_failed", "2FA Verification Failed"),
                            ("2fa_verify_success", "2FA Verification Success"),
                            ("profile_created", "Profile Created"),
                            ("config_change", "Configuration Change"),
                            ("ip_blocked", "IP Address Blocked"),
                            ("api_access", "API Access"),
                            ("file_upload", "File Upload"),
                            ("file_download", "File Download"),
                            ("admin_action", "Admin Action"),
                            ("bulk_operation", "Bulk Operation"),
                            ("security_scan", "Security Scan"),
                            ("vulnerability_detected", "Vulnerability Detected"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        db_index=True,
                        default="info",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("investigating", "Investigating"),
                            ("resolved", "Resolved"),
                            ("false_positive", "False Positive"),
                            ("ignored", "Ignored"),
                        ],
                        db_index=True,
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        db_index=True, validators=[security.models.validate_ip_address]
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                (
                    "session_key",
                    models.CharField(blank=True, db_index=True, max_length=40),
                ),
                ("referer", models.URLField(blank=True, max_length=500)),
                (
                    "country",
                    models.CharField(
                        blank=True, help_text="ISO country code", max_length=2
                    ),
                ),
                ("city", models.CharField(blank=True, max_length=100)),
                ("description", models.TextField()),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("resolved", models.BooleanField(db_index=True, default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                (
                    "risk_score",
                    models.PositiveIntegerField(
                        default=0, help_text="Risk score from 0-100"
                    ),
                ),
                ("notification_sent", models.BooleanField(default=False)),
                ("notification_sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_security_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="security_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Security Event",
                "verbose_name_plural": "Security Events",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["event_type", "timestamp"],
                        name="security_se_event_t_1a00f0_idx",
                    ),
                    models.Index(
                        fields=["user", "timestamp"],
                        name="security_se_user_id_6ceb62_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="security_se_ip_addr_7e6b32_idx",
                    ),
                    models.Index(
                        fields=["severity", "resolved"],
                        name="security_se_severit_d0a5b5_idx",
                    ),
                    models.Index(
                        fields=["status", "severity"],
                        name="security_se_status_d072ed_idx",
                    ),
                    models.Index(
                        fields=["risk_score", "timestamp"],
                        name="security_se_risk_sc_546d1f_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SecurityLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("LOGIN", "Login"),
                            ("LOGOUT", "Logout"),
                            ("REGISTER", "Register"),
                            ("PASSWORD_CHANGE", "Password Change"),
                            ("PASSWORD_RESET", "Password Reset"),
                            ("PASSWORD_RESET_REQUEST", "Password Reset Request"),
                            ("2FA_VERIFY", "2FA Verification"),
                            ("2FA_ENABLE", "2FA Enable"),
                            ("2FA_DISABLE", "2FA Disable"),
                            ("FAILED_LOGIN", "Failed Login"),
                            ("ACCOUNT_LOCKED", "Account Locked"),
                            ("ACCOUNT_UNLOCKED", "Account Unlocked"),
                            ("PERMISSION_DENIED", "Permission Denied"),
                            ("SUSPICIOUS_ACTIVITY", "Suspicious Activity"),
                            ("EMAIL_VERIFICATION", "Email Verification"),
                            ("PROFILE_UPDATE", "Profile Update"),
                            ("API_ACCESS", "API Access"),
                            ("DATA_EXPORT", "Data Export"),
                            ("ADMIN_ACTION", "Admin Action"),
                        ],
                        db_index=True,
                        max_length=30,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("INFO", "Info"),
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        db_index=True,
                        default="INFO",
                        max_length=10,
                    ),
                ),
                ("description", models.TextField()),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        db_index=True,
                        null=True,
                        validators=[security.models.validate_ip_address],
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                ("session_key", models.CharField(blank=True, max_length=40)),
                ("request_path", models.CharField(blank=True, max_length=500)),
                ("request_method", models.CharField(blank=True, max_length=10)),
                ("response_status", models.PositiveIntegerField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "correlation_id",
                    models.CharField(
                        blank=True,
                        help_text="For tracking related events",
                        max_length=100,
                    ),
                ),
                ("is_resolved", models.BooleanField(db_index=True, default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_security_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="security_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Security Log",
                "verbose_name_plural": "Security Logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="security_se_user_id_e3f03d_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="security_se_action_55cbfb_idx",
                    ),
                    models.Index(
                        fields=["severity", "is_resolved"],
                        name="security_se_severit_42a756_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="security_se_ip_addr_367d8c_idx",
                    ),
                    models.Index(
                        fields=["correlation_id"], name="security_se_correla_3d770a_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("session_key", models.CharField(max_length=40, unique=True)),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        validators=[security.models.validate_ip_address]
                    ),
                ),
                ("user_agent", models.TextField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "last_activity",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "logout_reason",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("manual", "Manual Logout"),
                            ("timeout", "Session Timeout"),
                            ("forced", "Forced Logout"),
                            ("security", "Security Logout"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="active_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-last_activity"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_active"],
                        name="security_us_user_id_9aa362_idx",
                    ),
                    models.Index(
                        fields=["session_key"], name="security_us_session_cd98d8_idx"
                    ),
                    models.Index(
                        fields=["last_activity"], name="security_us_last_ac_9080e9_idx"
                    ),
                ],
            },
        ),
    ]
