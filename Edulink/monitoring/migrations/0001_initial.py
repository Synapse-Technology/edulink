# Generated by Django 4.2.7 on 2025-09-03 06:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MonitoringConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "health_check_interval",
                    models.IntegerField(
                        default=300, help_text="Health check interval in seconds"
                    ),
                ),
                ("health_check_enabled", models.BooleanField(default=True)),
                ("api_monitoring_enabled", models.BooleanField(default=True)),
                (
                    "slow_query_threshold",
                    models.FloatField(
                        default=1000, help_text="Slow query threshold in milliseconds"
                    ),
                ),
                (
                    "error_rate_threshold",
                    models.FloatField(
                        default=5.0, help_text="Error rate threshold percentage"
                    ),
                ),
                ("alerts_enabled", models.BooleanField(default=True)),
                ("email_notifications", models.BooleanField(default=True)),
                ("notification_emails", models.JSONField(blank=True, default=list)),
                ("metrics_retention_days", models.IntegerField(default=30)),
                ("health_check_retention_days", models.IntegerField(default=7)),
                ("alert_retention_days", models.IntegerField(default=90)),
                ("cpu_warning_threshold", models.FloatField(default=80.0)),
                ("cpu_critical_threshold", models.FloatField(default=95.0)),
                ("memory_warning_threshold", models.FloatField(default=85.0)),
                ("memory_critical_threshold", models.FloatField(default=95.0)),
                ("disk_warning_threshold", models.FloatField(default=85.0)),
                ("disk_critical_threshold", models.FloatField(default=95.0)),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="SystemHealthCheck",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "overall_status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("warning", "Warning"),
                            ("critical", "Critical"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "database_status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("warning", "Warning"),
                            ("critical", "Critical"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "cache_status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("warning", "Warning"),
                            ("critical", "Critical"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "storage_status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("warning", "Warning"),
                            ("critical", "Critical"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "email_status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("warning", "Warning"),
                            ("critical", "Critical"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "cpu_usage",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "memory_usage",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "disk_usage",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("database_response_time", models.FloatField(blank=True, null=True)),
                ("cache_response_time", models.FloatField(blank=True, null=True)),
                ("details", models.JSONField(blank=True, default=dict)),
                ("errors", models.JSONField(blank=True, default=list)),
                ("warnings", models.JSONField(blank=True, default=list)),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["timestamp", "overall_status"],
                        name="monitoring__timesta_81cd68_idx",
                    ),
                    models.Index(
                        fields=["overall_status"], name="monitoring__overall_ab27a3_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SystemAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("performance", "Performance"),
                            ("error_rate", "Error Rate"),
                            ("system_resource", "System Resource"),
                            ("database", "Database"),
                            ("cache", "Cache"),
                            ("security", "Security"),
                            ("custom", "Custom"),
                        ],
                        db_index=True,
                        max_length=30,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("acknowledged", "Acknowledged"),
                            ("resolved", "Resolved"),
                            ("suppressed", "Suppressed"),
                        ],
                        db_index=True,
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        help_text="Source component or service",
                        max_length=100,
                    ),
                ),
                ("affected_endpoints", models.JSONField(blank=True, default=list)),
                ("metrics", models.JSONField(blank=True, default=dict)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("notification_sent", models.BooleanField(default=False)),
                ("notification_channels", models.JSONField(blank=True, default=list)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["timestamp", "severity"],
                        name="monitoring__timesta_dfd532_idx",
                    ),
                    models.Index(
                        fields=["status", "severity"],
                        name="monitoring__status_ee4e6a_idx",
                    ),
                    models.Index(
                        fields=["alert_type", "status"],
                        name="monitoring__alert_t_296853_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="APIMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("endpoint", models.CharField(db_index=True, max_length=255)),
                ("method", models.CharField(db_index=True, max_length=10)),
                ("status_code", models.IntegerField(db_index=True)),
                (
                    "response_time",
                    models.FloatField(help_text="Response time in milliseconds"),
                ),
                (
                    "request_size",
                    models.IntegerField(
                        blank=True, help_text="Request size in bytes", null=True
                    ),
                ),
                (
                    "response_size",
                    models.IntegerField(
                        blank=True, help_text="Response size in bytes", null=True
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["timestamp", "endpoint"],
                        name="monitoring__timesta_a6a8d6_idx",
                    ),
                    models.Index(
                        fields=["endpoint", "method"],
                        name="monitoring__endpoin_99d015_idx",
                    ),
                    models.Index(
                        fields=["status_code", "timestamp"],
                        name="monitoring__status__cf467e_idx",
                    ),
                    models.Index(
                        fields=["response_time"], name="monitoring__respons_a22da9_idx"
                    ),
                ],
            },
        ),
    ]
