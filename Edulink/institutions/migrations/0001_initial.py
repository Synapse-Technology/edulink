# Generated by Django 5.2.4 on 2025-07-30 07:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Institution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("institution_type", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("website", models.URLField(blank=True)),
                ("address", models.CharField(blank=True, max_length=255)),
                (
                    "registration_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "university_code",
                    models.CharField(
                        blank=True,
                        help_text="Unique code for student registration (e.g., UON2024, JKUAT2024)",
                        max_length=20,
                        null=True,
                        unique=True,
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("code", models.CharField(blank=True, max_length=50)),
                ("duration_years", models.PositiveIntegerField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to="institutions.institution",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MasterInstitution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("short_name", models.CharField(blank=True, max_length=100)),
                (
                    "institution_type",
                    models.CharField(
                        choices=[
                            ("university", "University"),
                            ("college", "College"),
                            ("institute", "Institute"),
                            ("polytechnic", "Polytechnic"),
                            ("tvet", "TVET Institution"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "accreditation_body",
                    models.CharField(
                        choices=[
                            ("cue", "Commission for University Education"),
                            (
                                "tveta",
                                "Technical and Vocational Education and Training Authority",
                            ),
                            ("knqa", "Kenya National Qualifications Authority"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("website", models.URLField(blank=True)),
                ("location", models.CharField(blank=True, max_length=255)),
                ("county", models.CharField(blank=True, max_length=100)),
                ("is_public", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "data_source",
                    models.CharField(
                        choices=[
                            ("kuccps", "KUCCPS"),
                            ("cue", "CUE"),
                            ("tveta", "TVETA"),
                            ("manual", "Manual Entry"),
                            ("webscrape", "Web Scraping"),
                        ],
                        default="manual",
                        max_length=50,
                    ),
                ),
                ("last_verified", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(fields=["name"], name="institution_name_ed16e3_idx"),
                    models.Index(
                        fields=["institution_type"],
                        name="institution_institu_6522fd_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="institution_is_acti_91167d_idx"
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="institution",
            name="master_institution",
            field=models.ForeignKey(
                blank=True,
                help_text="Link to master institution database",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="institutions.masterinstitution",
            ),
        ),
        migrations.CreateModel(
            name="StudentVerificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registration_number", models.CharField(max_length=50)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("not_found", "Student Not Found"),
                            ("api_error", "API Error"),
                            ("timeout", "Timeout"),
                        ],
                        max_length=20,
                    ),
                ),
                ("api_response", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "response_time_ms",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institutions.institution",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UniversityAPIConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "api_endpoint",
                    models.URLField(
                        help_text="Base URL for the university's student information system API"
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True,
                        help_text="API key for authentication",
                        max_length=255,
                    ),
                ),
                (
                    "api_secret",
                    models.CharField(
                        blank=True,
                        help_text="API secret for authentication",
                        max_length=255,
                    ),
                ),
                (
                    "auth_type",
                    models.CharField(
                        choices=[
                            ("api_key", "API Key"),
                            ("oauth", "OAuth"),
                            ("basic", "Basic Auth"),
                            ("bearer", "Bearer Token"),
                        ],
                        default="api_key",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "sync_frequency_hours",
                    models.PositiveIntegerField(
                        default=24, help_text="How often to sync data in hours"
                    ),
                ),
                (
                    "student_lookup_endpoint",
                    models.CharField(
                        default="/api/students/{registration_number}",
                        help_text="Endpoint to lookup student by registration number. Use {registration_number} as placeholder",
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "institution",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_config",
                        to="institutions.institution",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UniversityRegistrationCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="University registration code in format EDUJKUAT24-XX",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        help_text="Academic year for this code"
                    ),
                ),
                (
                    "sequence_number",
                    models.PositiveIntegerField(
                        help_text="Sequential number for this institution and year"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="When this code expires", null=True
                    ),
                ),
                (
                    "max_uses",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Maximum number of times this code can be used",
                    ),
                ),
                (
                    "current_uses",
                    models.PositiveIntegerField(
                        default=0, help_text="Current number of uses"
                    ),
                ),
                (
                    "created_by",
                    models.CharField(
                        blank=True, help_text="Who generated this code", max_length=255
                    ),
                ),
                (
                    "ip_restrictions",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of allowed IP addresses/ranges for geofencing",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registration_codes",
                        to="institutions.institution",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CodeUsageLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email of user attempting registration",
                        max_length=254,
                    ),
                ),
                ("national_id", models.CharField(blank=True, max_length=20)),
                ("registration_number", models.CharField(blank=True, max_length=50)),
                (
                    "usage_status",
                    models.CharField(
                        choices=[
                            ("success", "Successful Registration"),
                            ("failed", "Failed Registration"),
                            ("invalid_code", "Invalid Code"),
                            ("expired", "Code Expired"),
                            ("limit_exceeded", "Usage Limit Exceeded"),
                            ("ip_blocked", "IP Address Blocked"),
                            ("duplicate_attempt", "Duplicate Registration Attempt"),
                        ],
                        max_length=20,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "registration_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="institutions.universityregistrationcode",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True)),
                ("head_of_department", models.CharField(blank=True, max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="departments",
                        to="institutions.institution",
                    ),
                ),
            ],
            options={
                "unique_together": {("institution", "code")},
            },
        ),
        migrations.CreateModel(
            name="Campus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=20)),
                ("address", models.TextField()),
                ("city", models.CharField(max_length=100)),
                ("country", models.CharField(default="Kenya", max_length=100)),
                ("is_main_campus", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campuses",
                        to="institutions.institution",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Campuses",
                "unique_together": {("institution", "code")},
            },
        ),
        migrations.CreateModel(
            name="StudentInvite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=255, unique=True)),
                ("email", models.EmailField(max_length=254)),
                ("registration_number", models.CharField(blank=True, max_length=50)),
                ("is_used", models.BooleanField(default=False)),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institutions.institution",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["token"], name="institution_token_018254_idx"),
                    models.Index(
                        fields=["institution", "is_used"],
                        name="institution_institu_03c836_idx",
                    ),
                ],
                "unique_together": {("institution", "email")},
            },
        ),
        migrations.AddIndex(
            model_name="universityregistrationcode",
            index=models.Index(fields=["code"], name="institution_code_0f011d_idx"),
        ),
        migrations.AddIndex(
            model_name="universityregistrationcode",
            index=models.Index(
                fields=["institution", "year"], name="institution_institu_ea1d1d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="universityregistrationcode",
            index=models.Index(
                fields=["is_active", "expires_at"],
                name="institution_is_acti_340a38_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="universityregistrationcode",
            unique_together={("institution", "year", "sequence_number")},
        ),
        migrations.AddIndex(
            model_name="codeusagelog",
            index=models.Index(
                fields=["registration_code", "created_at"],
                name="institution_registr_1a03f7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="codeusagelog",
            index=models.Index(
                fields=["email", "usage_status"], name="institution_email_c92aaf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="codeusagelog",
            index=models.Index(
                fields=["ip_address", "created_at"],
                name="institution_ip_addr_435d41_idx",
            ),
        ),
    ]
