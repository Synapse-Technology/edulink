# Generated by Django 5.2.4 on 2025-07-25 09:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("institutions", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="institution",
            name="university_code",
            field=models.CharField(
                blank=True,
                help_text="Unique code for student registration (e.g., UON2024, JKUAT2024)",
                max_length=20,
                null=True,
                unique=True,
            ),
        ),
        migrations.CreateModel(
            name="MasterInstitution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("short_name", models.CharField(blank=True, max_length=100)),
                (
                    "institution_type",
                    models.CharField(
                        choices=[
                            ("university", "University"),
                            ("college", "College"),
                            ("institute", "Institute"),
                            ("polytechnic", "Polytechnic"),
                            ("tvet", "TVET Institution"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "accreditation_body",
                    models.CharField(
                        choices=[
                            ("cue", "Commission for University Education"),
                            (
                                "tveta",
                                "Technical and Vocational Education and Training Authority",
                            ),
                            ("knqa", "Kenya National Qualifications Authority"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("website", models.URLField(blank=True)),
                ("location", models.CharField(blank=True, max_length=255)),
                ("county", models.CharField(blank=True, max_length=100)),
                ("is_public", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "data_source",
                    models.CharField(
                        choices=[
                            ("kuccps", "KUCCPS"),
                            ("cue", "CUE"),
                            ("tveta", "TVETA"),
                            ("manual", "Manual Entry"),
                            ("webscrape", "Web Scraping"),
                        ],
                        default="manual",
                        max_length=50,
                    ),
                ),
                ("last_verified", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(fields=["name"], name="institution_name_ed16e3_idx"),
                    models.Index(
                        fields=["institution_type"],
                        name="institution_institu_6522fd_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="institution_is_acti_91167d_idx"
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="institution",
            name="master_institution",
            field=models.ForeignKey(
                blank=True,
                help_text="Link to master institution database",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="institutions.masterinstitution",
            ),
        ),
        migrations.CreateModel(
            name="StudentVerificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registration_number", models.CharField(max_length=50)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("not_found", "Student Not Found"),
                            ("api_error", "API Error"),
                            ("timeout", "Timeout"),
                        ],
                        max_length=20,
                    ),
                ),
                ("api_response", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "response_time_ms",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institutions.institution",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UniversityAPIConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "api_endpoint",
                    models.URLField(
                        help_text="Base URL for the university's student information system API"
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True,
                        help_text="API key for authentication",
                        max_length=255,
                    ),
                ),
                (
                    "api_secret",
                    models.CharField(
                        blank=True,
                        help_text="API secret for authentication",
                        max_length=255,
                    ),
                ),
                (
                    "auth_type",
                    models.CharField(
                        choices=[
                            ("api_key", "API Key"),
                            ("oauth", "OAuth"),
                            ("basic", "Basic Auth"),
                            ("bearer", "Bearer Token"),
                        ],
                        default="api_key",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "sync_frequency_hours",
                    models.PositiveIntegerField(
                        default=24, help_text="How often to sync data in hours"
                    ),
                ),
                (
                    "student_lookup_endpoint",
                    models.CharField(
                        default="/api/students/{registration_number}",
                        help_text="Endpoint to lookup student by registration number. Use {registration_number} as placeholder",
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "institution",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_config",
                        to="institutions.institution",
                    ),
                ),
            ],
        ),
    ]
