# Generated by Django 5.2.4 on 2025-07-25 15:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("institutions", "0002_institution_university_code_masterinstitution_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="UniversityRegistrationCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="University registration code in format EDUJKUAT24-XX",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        help_text="Academic year for this code"
                    ),
                ),
                (
                    "sequence_number",
                    models.PositiveIntegerField(
                        help_text="Sequential number for this institution and year"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="When this code expires", null=True
                    ),
                ),
                (
                    "max_uses",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Maximum number of times this code can be used",
                    ),
                ),
                (
                    "current_uses",
                    models.PositiveIntegerField(
                        default=0, help_text="Current number of uses"
                    ),
                ),
                (
                    "created_by",
                    models.CharField(
                        blank=True, help_text="Who generated this code", max_length=255
                    ),
                ),
                (
                    "ip_restrictions",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of allowed IP addresses/ranges for geofencing",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registration_codes",
                        to="institutions.institution",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CodeUsageLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email of user attempting registration",
                        max_length=254,
                    ),
                ),
                ("national_id", models.CharField(blank=True, max_length=20)),
                ("registration_number", models.CharField(blank=True, max_length=50)),
                (
                    "usage_status",
                    models.CharField(
                        choices=[
                            ("success", "Successful Registration"),
                            ("failed", "Failed Registration"),
                            ("invalid_code", "Invalid Code"),
                            ("expired", "Code Expired"),
                            ("limit_exceeded", "Usage Limit Exceeded"),
                            ("ip_blocked", "IP Address Blocked"),
                            ("duplicate_attempt", "Duplicate Registration Attempt"),
                        ],
                        max_length=20,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "registration_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="institutions.universityregistrationcode",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="universityregistrationcode",
            index=models.Index(fields=["code"], name="institution_code_0f011d_idx"),
        ),
        migrations.AddIndex(
            model_name="universityregistrationcode",
            index=models.Index(
                fields=["institution", "year"], name="institution_institu_ea1d1d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="universityregistrationcode",
            index=models.Index(
                fields=["is_active", "expires_at"],
                name="institution_is_acti_340a38_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="universityregistrationcode",
            unique_together={("institution", "year", "sequence_number")},
        ),
        migrations.AddIndex(
            model_name="codeusagelog",
            index=models.Index(
                fields=["registration_code", "created_at"],
                name="institution_registr_1a03f7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="codeusagelog",
            index=models.Index(
                fields=["email", "usage_status"], name="institution_email_c92aaf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="codeusagelog",
            index=models.Index(
                fields=["ip_address", "created_at"],
                name="institution_ip_addr_435d41_idx",
            ),
        ),
    ]
