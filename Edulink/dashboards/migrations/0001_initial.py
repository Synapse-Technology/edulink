# Generated by Django 5.2.4 on 2025-07-19 06:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("application", "0002_initial"),
        ("internship", "0001_initial"),
        ("users", "0003_studentprofile_github_url_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "achievement_type",
                    models.CharField(
                        choices=[
                            ("profile", "Profile Completion"),
                            ("application", "Application Milestone"),
                            ("interview", "Interview Milestone"),
                            ("acceptance", "Acceptance Milestone"),
                            ("streak", "Activity Streak"),
                            ("skill", "Skill Development"),
                            ("social", "Social Engagement"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        help_text="Bootstrap icon class or emoji", max_length=50
                    ),
                ),
                ("points", models.PositiveIntegerField(default=10)),
                (
                    "criteria",
                    models.JSONField(help_text="Criteria for earning this achievement"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["points", "name"],
            },
        ),
        migrations.CreateModel(
            name="DashboardInsight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "insight_type",
                    models.CharField(
                        choices=[
                            ("profile", "Profile Improvement"),
                            ("application", "Application Strategy"),
                            ("skill", "Skill Development"),
                            ("market", "Market Trends"),
                            ("timing", "Timing Optimization"),
                            ("networking", "Networking"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("action_items", models.JSONField(blank=True, default=list)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("is_actioned", models.BooleanField(default=False)),
                (
                    "relevance_score",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insights",
                        to="users.studentprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["-relevance_score", "-generated_at"],
            },
        ),
        migrations.CreateModel(
            name="InternshipProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "profile_completion",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Profile completion percentage",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("first_application_date", models.DateTimeField(blank=True, null=True)),
                ("total_applications", models.PositiveIntegerField(default=0)),
                ("applications_this_month", models.PositiveIntegerField(default=0)),
                ("total_interviews", models.PositiveIntegerField(default=0)),
                ("interviews_this_month", models.PositiveIntegerField(default=0)),
                ("interview_success_rate", models.FloatField(default=0.0)),
                ("total_acceptances", models.PositiveIntegerField(default=0)),
                ("first_acceptance_date", models.DateTimeField(blank=True, null=True)),
                ("skills_developed", models.JSONField(blank=True, default=list)),
                ("skills_targeted", models.JSONField(blank=True, default=list)),
                ("current_streak", models.PositiveIntegerField(default=0)),
                ("longest_streak", models.PositiveIntegerField(default=0)),
                ("last_activity_date", models.DateField(blank=True, null=True)),
                ("monthly_application_goal", models.PositiveIntegerField(default=10)),
                ("target_industries", models.JSONField(blank=True, default=list)),
                ("target_companies", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="internship_progress",
                        to="users.studentprofile",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Internship Progress",
            },
        ),
        migrations.CreateModel(
            name="AnalyticsEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("application_submitted", "Application Submitted"),
                            ("application_viewed", "Application Viewed"),
                            ("interview_scheduled", "Interview Scheduled"),
                            ("interview_completed", "Interview Completed"),
                            ("offer_received", "Offer Received"),
                            ("offer_accepted", "Offer Accepted"),
                            ("profile_updated", "Profile Updated"),
                            ("skill_added", "Skill Added"),
                            ("internship_viewed", "Internship Viewed"),
                            ("search_performed", "Search Performed"),
                        ],
                        max_length=30,
                    ),
                ),
                ("event_data", models.JSONField(blank=True, default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("session_id", models.CharField(blank=True, max_length=100)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_events",
                        to="users.studentprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["student", "event_type", "timestamp"],
                        name="dashboards__student_9d1ae5_idx",
                    ),
                    models.Index(
                        fields=["event_type", "timestamp"],
                        name="dashboards__event_t_39e767_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CalendarEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("application_deadline", "Application Deadline"),
                            ("interview", "Interview"),
                            ("follow_up", "Follow Up"),
                            ("career_fair", "Career Fair"),
                            ("workshop", "Workshop"),
                            ("deadline_reminder", "Deadline Reminder"),
                            ("goal_reminder", "Goal Reminder"),
                            ("custom", "Custom Event"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("is_all_day", models.BooleanField(default=False)),
                ("reminder_sent", models.BooleanField(default=False)),
                ("reminder_time", models.DateTimeField(blank=True, null=True)),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=200)),
                (
                    "color",
                    models.CharField(
                        default="#14b8a6", help_text="Hex color code", max_length=7
                    ),
                ),
                ("tags", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "related_application",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="application.application",
                    ),
                ),
                (
                    "related_internship",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="internship.internship",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calendar_events",
                        to="users.studentprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["start_date", "priority"],
                "indexes": [
                    models.Index(
                        fields=["student", "start_date"],
                        name="dashboards__student_e0b0aa_idx",
                    ),
                    models.Index(
                        fields=["event_type", "start_date"],
                        name="dashboards__event_t_c8f9ee_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="StudentAchievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("earned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "progress_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Data about progress towards achievement",
                    ),
                ),
                (
                    "achievement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_achievements",
                        to="dashboards.achievement",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to="users.studentprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["-earned_at"],
                "unique_together": {("student", "achievement")},
            },
        ),
    ]
