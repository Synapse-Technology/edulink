# Generated by Django 4.2.7 on 2025-09-03 05:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("internship", "0001_initial"),
        ("application", "0002_initial"),
        ("users", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("dashboards", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="workflowanalytics",
            name="employer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workflow_analytics",
                to="users.employerprofile",
            ),
        ),
        migrations.AddField(
            model_name="workflowanalytics",
            name="workflow",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="analytics",
                to="dashboards.workflow",
            ),
        ),
        migrations.AddField(
            model_name="workflow",
            name="employer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workflows",
                to="users.employerprofile",
            ),
        ),
        migrations.AddField(
            model_name="workflow",
            name="template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="workflow_instances",
                to="dashboards.workflowtemplate",
            ),
        ),
        migrations.AddField(
            model_name="studentactivitylog",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="activity_logs",
                to="users.studentprofile",
            ),
        ),
        migrations.AddField(
            model_name="studentachievement",
            name="achievement",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="student_achievements",
                to="dashboards.achievement",
            ),
        ),
        migrations.AddField(
            model_name="studentachievement",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="achievements",
                to="users.studentprofile",
            ),
        ),
        migrations.AddField(
            model_name="progressmilestone",
            name="progress",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="milestones",
                to="dashboards.internshipprogress",
            ),
        ),
        migrations.AddField(
            model_name="pageview",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="page_views",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="internshipprogress",
            name="student",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="internship_progress",
                to="users.studentprofile",
            ),
        ),
        migrations.AddField(
            model_name="dashboardinsight",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="insights",
                to="users.studentprofile",
            ),
        ),
        migrations.AddField(
            model_name="calendarevent",
            name="related_application",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="application.application",
            ),
        ),
        migrations.AddField(
            model_name="calendarevent",
            name="related_internship",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="internship.internship",
            ),
        ),
        migrations.AddField(
            model_name="calendarevent",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="calendar_events",
                to="users.studentprofile",
            ),
        ),
        migrations.AddField(
            model_name="analyticsevent",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="analytics_events",
                to="users.studentprofile",
            ),
        ),
        migrations.AddIndex(
            model_name="workflowtemplate",
            index=models.Index(
                fields=["category", "is_active"], name="dashboards__categor_5895d2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowtemplate",
            index=models.Index(
                fields=["is_public", "is_active"], name="dashboards__is_publ_fdb889_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowtemplate",
            index=models.Index(
                fields=["popularity_score"], name="dashboards__popular_75ae53_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowexecution",
            index=models.Index(
                fields=["workflow", "status"], name="dashboards__workflo_940078_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowexecution",
            index=models.Index(
                fields=["status", "scheduled_at"], name="dashboards__status_d3b5ef_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowexecution",
            index=models.Index(
                fields=["started_at"], name="dashboards__started_f0a4d0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowanalytics",
            index=models.Index(
                fields=["employer", "date"], name="dashboards__employe_58249c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowanalytics",
            index=models.Index(
                fields=["workflow", "date"], name="dashboards__workflo_fa72df_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowanalytics",
            index=models.Index(
                fields=["period_type", "date"], name="dashboards__period__c30b83_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="workflowanalytics",
            unique_together={("employer", "workflow", "date", "period_type")},
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["employer", "is_active"], name="dashboards__employe_bfe1bd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["workflow_type", "is_active"],
                name="dashboards__workflo_cc6d55_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["trigger_event"], name="dashboards__trigger_44eb7e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["last_executed"], name="dashboards__last_ex_4f942e_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="studentactivitylog",
            unique_together={("student", "activity_date", "activity_type")},
        ),
        migrations.AlterUniqueTogether(
            name="studentachievement",
            unique_together={("student", "achievement")},
        ),
        migrations.AddIndex(
            model_name="progressmilestone",
            index=models.Index(
                fields=["progress", "milestone_type"],
                name="dashboards__progres_ab51d0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="progressmilestone",
            index=models.Index(
                fields=["milestone_type", "achieved_at"],
                name="dashboards__milesto_f60dea_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="progressmilestone",
            unique_together={("progress", "milestone_type", "achieved_at")},
        ),
        migrations.AddIndex(
            model_name="pageview",
            index=models.Index(
                fields=["timestamp", "path"], name="dashboards__timesta_b08396_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pageview",
            index=models.Index(
                fields=["user", "timestamp"], name="dashboards__user_id_3ab117_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pageview",
            index=models.Index(
                fields=["session_key", "timestamp"],
                name="dashboards__session_e13231_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="pageview",
            index=models.Index(
                fields=["is_authenticated", "timestamp"],
                name="dashboards__is_auth_f02cd5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="internshipprogress",
            index=models.Index(
                fields=["student", "internship_status"],
                name="dashboards__student_51fd60_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="internshipprogress",
            index=models.Index(
                fields=["profile_completion"], name="dashboards__profile_4674c3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="internshipprogress",
            index=models.Index(
                fields=["total_applications", "accepted_applications"],
                name="dashboards__total_a_bb96bb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="internshipprogress",
            index=models.Index(
                fields=["current_streak", "last_activity_date"],
                name="dashboards__current_a4e5bd_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="internshipprogress",
            index=models.Index(
                fields=["goal_status", "goal_deadline"],
                name="dashboards__goal_st_174d6f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="internshipprogress",
            index=models.Index(
                fields=["overall_performance_score"],
                name="dashboards__overall_2ccfaf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="calendarevent",
            index=models.Index(
                fields=["student", "start_date"], name="dashboards__student_e0b0aa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="calendarevent",
            index=models.Index(
                fields=["event_type", "start_date"],
                name="dashboards__event_t_c8f9ee_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["student", "event_type", "timestamp"],
                name="dashboards__student_9d1ae5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["event_type", "timestamp"],
                name="dashboards__event_t_39e767_idx",
            ),
        ),
    ]
