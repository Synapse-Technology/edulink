# Generated by Django 4.2.7 on 2025-09-03 05:54

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Internship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(db_index=True, max_length=255)),
                ("description", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("technology", "Technology"),
                            ("finance", "Finance"),
                            ("marketing", "Marketing"),
                            ("healthcare", "Healthcare"),
                            ("education", "Education"),
                            ("engineering", "Engineering"),
                            ("design", "Design"),
                            ("research", "Research"),
                            ("business", "Business"),
                            ("legal", "Legal"),
                            ("media", "Media & Communications"),
                            ("other", "Other"),
                        ],
                        db_index=True,
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "experience_level",
                    models.CharField(
                        choices=[
                            ("entry", "Entry Level"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        db_index=True,
                        default="entry",
                        max_length=15,
                    ),
                ),
                (
                    "location_type",
                    models.CharField(
                        choices=[
                            ("remote", "Remote"),
                            ("on_site", "On-site"),
                            ("hybrid", "Hybrid"),
                        ],
                        db_index=True,
                        default="on_site",
                        max_length=10,
                    ),
                ),
                (
                    "location",
                    models.CharField(blank=True, db_index=True, max_length=255),
                ),
                ("start_date", models.DateField(db_index=True)),
                ("end_date", models.DateField()),
                (
                    "duration_weeks",
                    models.PositiveIntegerField(
                        help_text="Duration of internship in weeks",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(52),
                        ],
                    ),
                ),
                (
                    "stipend",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Monthly stipend amount",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD",
                        help_text="Currency code (e.g., USD, EUR, GBP)",
                        max_length=3,
                    ),
                ),
                ("required_skills", models.JSONField(blank=True, default=list)),
                ("preferred_skills", models.JSONField(blank=True, default=list)),
                ("eligibility_criteria", models.TextField(blank=True)),
                (
                    "min_gpa",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum GPA requirement (0.0-4.0 scale)",
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(4.0),
                        ],
                    ),
                ),
                (
                    "required_year_of_study",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of acceptable years of study (e.g., [2, 3, 4])",
                    ),
                ),
                (
                    "required_majors",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of acceptable majors/courses",
                    ),
                ),
                ("deadline", models.DateTimeField(db_index=True)),
                (
                    "max_applications",
                    models.PositiveIntegerField(
                        default=100,
                        help_text="Maximum number of applications allowed",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("institution-only", "Institution Only"),
                        ],
                        default="public",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("is_featured", models.BooleanField(db_index=True, default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("verification_date", models.DateTimeField(blank=True, null=True)),
                (
                    "benefits",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of benefits (e.g., ['Health Insurance', 'Flexible Hours'])",
                    ),
                ),
                (
                    "application_instructions",
                    models.TextField(
                        blank=True, help_text="Special instructions for applicants"
                    ),
                ),
            ],
            options={
                "verbose_name": "Internship",
                "verbose_name_plural": "Internships",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SkillTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
    ]
